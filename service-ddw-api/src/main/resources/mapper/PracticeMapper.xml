<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ddw.dao.PracticeMapper">

    <resultMap id="BaseResultMap" type="com.ddw.beans.vo.AppIndexPracticeVO">
        <id property="userId" column="userId"/>
        <result property="nickName" column="nickName"/>
        <result property="headImgUrl" column="headImgUrl"/>
        <result property="pgradeName" column="pgradeName"/>
        <result property="label" column="label"/>
        <result property="ordersCount" column="ordersCount"/>
        <result property="gameId" column="gameId"/>
        <result property="gameName" column="gameName"/>
        <result property="rankId" column="rankId"/>
        <result property="rank" column="rank"/>
        <result property="appointment" column="appointment"/>
    </resultMap>

    <select id="getPracticeList" parameterType="int" resultMap="BaseResultMap">
        select t1.userId,t1.gameId,t1.rankId,t1.appointment,t3.nickName,t3.headImgUrl,t3.label,
        t4.gradeName pgradeName,count(t2.practiceId) AS ordersCount,t6.gameName,t7.rank,IFNULL(t8.star,0)star
        from ddw_practice_game t1
		left join ddw_practice_order t2 on t1.userId=t2.practiceId
        left join ddw_userinfo t3 on t1.userId = t3.id
        left join ddw_practice_grade t4 on t4.id=t3.practiceGradeId
		left join ddw_practice t5 on t5.userId=t1.userId and t5.storeId=#{storeId}
		left join ddw_game t6 on t6.id=t1.gameId
		left join ddw_rank t7 on t7.id=t1.rankId
        left join ddw_practice_evaluation t8 on t8.practiceId=t1.userId
        <if test="appointment != null">
            where t1.appointment =#{appointment}
        </if>
        group  by t1.userId
        order by count(t2.practiceId) desc
        limit #{start},#{end}
    </select>

    <select id="getPracticeHaveOrderListByNoInIds" parameterType="int" resultMap="BaseResultMap">
        select t1.userId,t1.gameId,t1.rankId,t3.nickName,t3.headImgUrl,t3.label,
        t4.gradeName pgradeName,count(t2.practiceId) AS ordersCount,t6.gameName,t7.rank,IFNULL(t8.star,0)star
        from ddw_practice_game t1
        left join ddw_practice_order t2 on t1.userId=t2.practiceId
        <if test="weekList != null and weekList == 1">
            and YEARWEEK(date_format(t2.createTime,'%Y-%m-%d')) = YEARWEEK(now())
        </if>
        left join ddw_userinfo t3 on t1.userId = t3.id
        left join ddw_practice_grade t4 on t4.id=t3.practiceGradeId
        left join ddw_practice t5 on t5.userId=t1.userId and t5.storeId=#{storeId}
        left join ddw_game t6 on t6.id=t1.gameId
        left join ddw_rank t7 on t7.id=t1.rankId
        left join ddw_practice_evaluation t8 on t8.practiceId=t1.userId
        where
        1=1
        <if test="appointment != null">
            and t1.appointment =#{appointment}
        </if>
        <if test="userIdList !=null and userIdList.size() >0 ">
            and t3.id NOT in
            <foreach collection="userIdList" item="value"  index="key" open="(" separator="," close=")">
                #{value}
            </foreach>
        </if>
        group  by t1.userId
        order by count(t2.practiceId) desc
        limit #{start},#{end}
    </select>

    <select id="getPracticeListByNotInIds" resultMap="BaseResultMap">
        select t1.userId,t1.gameId,t1.rankId,t1.appointment,t3.nickName,t3.headImgUrl,t3.label,
        t4.gradeName pgradeName,t6.gameName,t7.rank,IFNULL(t8.star,0)star
        from ddw_practice_game t1
        left join ddw_userinfo t3 on t1.userId = t3.id
        left join ddw_practice_grade t4 on t4.id=t3.practiceGradeId
        left join ddw_practice t5 on t5.userId=t1.userId and t5.storeId=#{storeId}
        left join ddw_game t6 on t6.id=t1.gameId
        left join ddw_rank t7 on t7.id=t1.rankId
        left join ddw_practice_evaluation t8 on t8.practiceId=t1.userId
        where
        1=1
        <if test="appointment != null">
            and t1.appointment =#{appointment}
        </if>
        <if test="userIdList !=null and userIdList.size() >0 ">
            and t3.id NOT in
            <foreach collection="userIdList" item="value"  index="key" open="(" separator="," close=")">
                #{value}
            </foreach>
        </if>
        group  by t1.userId
        ORDER BY t1.updateTime asc
        limit #{start},#{end}
    </select>

    <select id="getPracticeDynamic" parameterType="int" resultType="java.util.HashMap">
        SELECT
            t1.gameId,
            ct1.gameName,
            t1.rankId,
            ct2.rank,
            t1.realityRankId,
            ct3.rank AS realityRank,
            ct5.headImgUrl,
            IFNULL( ct4.star, 0 ) AS star,
            IFNULL( t1.money, 0 ) AS money,
            IFNULL( t1.realityMoney, 0 ) AS realityMoney
        FROM
            ddw_practice_order t1
            INNER JOIN ddw_game ct1 ON ct1.id = t1.gameId
            INNER JOIN ddw_rank ct2 ON ct2.id = t1.rankId
            INNER JOIN ddw_rank ct3 ON ct3.id = t1.targetRankId
            LEFT JOIN ddw_practice_evaluation_detail ct4 ON ct4.practiceId = t1.practiceId and ct4.userId = t1.userId
            LEFT JOIN ddw_userinfo ct5 ON ct5.id = t1.userId
        WHERE
            t1.practiceId = #{practiceId}
            AND t1.payState = 1
        ORDER BY
            t1.updateTime DESC
            limit #{start},#{end}
    </select>

    <select id="getReviewPracticeList" parameterType="int" resultType="java.util.HashMap">
        SELECT id,drBusinessCode,userId,storeId,gameId,rankId,gameName,rank,
        picUrl1,picUrl2,picUrl3,status,`describe`,createTime,updateTime
        FROM
        (SELECT t1.id,t1.drBusinessCode,t1.userId,t1.storeId,t1.gameId,t1.rankId,ct1.gameName,ct2.rank,
        t1.picUrl1,t1.picUrl2,t1.picUrl3,t1.`status`,t1.`describe`,t1.createTime,t1.updateTime
        FROM ddw_review_practice t1
		INNER JOIN ddw_game ct1 ON ct1.id = t1.gameId
        INNER JOIN ddw_rank ct2 ON ct2.id = t1.rankId
        WHERE
        userId = #{practiceId}
        AND storeId=#{storeId}
         ORDER BY updateTime desc)
         AS a GROUP BY userId,gameId
    </select>

</mapper>